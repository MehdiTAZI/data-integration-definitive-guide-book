name: Extract and Generate Mermaid Diagrams
on:
  workflow_dispatch:

  push:
    branches:
      - main
jobs:
  extract-and-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y npm
          sudo apt-get install -y python3 python3-pip
          pip3 install -r requirements.txt --no-cache-dir
          # Install Mermaid CLI and Puppeteer
          sudo npm install -g puppeteer @mermaid-js/mermaid-cli
          # Install Puppeteer
          npm install puppeteer          

      - name: Extract and Generate Mermaid Diagrams
        run: |
          # Set the PUPPETEER_EXECUTABLE_PATH environment variable
          # export PUPPETEER_EXECUTABLE_PATH=$(npm root -g)/puppeteer/.local-chromium/linux-*/chrome-linux/chrome   
          # List all directories that start with "chapter"
          directories=(chapter*)
          # Loop through each directory
          for d in "${directories[@]}"
          do
            # Execute extract_all.sh in the directory
            ./extract_all.sh "$d" "mermaid/$d"
            # Execute generate_mermaid.sh in the directory
            ./generate_mermaid.sh -d "mermaid/$d" -o "diagrams/$d"
          done

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add diagrams
          git add mermaid
          git_status=$(git status --porcelain)
          if [ -n "$git_status" ]; then
            git commit -m "Extracted and generated Mermaid diagrams"
            git remote set-url origin "https://${{ secrets.GITHUB_TOKEN }}@github.com/raphaelmansuy/data-architecture-diagrams.git"
            git push
          else
            echo "No changes to commit"
            exit 0
          fi
    
